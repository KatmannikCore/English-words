{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/english-words/src/containers/themesList/themesList.js\";\nimport React, { Component } from 'react';\nimport GetAllWord from \"../../components/DataDB/DataDB\";\nimport ModalWindow from \"../addWord/modalWindow/modalWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThemesList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      words: []\n    };\n  }\n\n  componentDidMount() {\n    GetAllWord().then(value => {\n      this.setState({\n        words: value\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [!!words ? /*#__PURE__*/_jsxDEV(ModalWindow, {\n        words: words\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 30\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 63\n      }, this), \"    \", !!words ? /*#__PURE__*/_jsxDEV(ModalWindow, {\n        words: words\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 93\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 126\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ThemesList; // import React, {useState} from 'react';\n// import GetAllWord from \"../../components/DataDB/DataDB\";\n// import ModalWindow from \"../addWord/modalWindow/modalWindow\";\n// function ThemesList(props) {\n//     let [words, setWords] = useState([]);\n//      async function addThemeHandler() {\n//          let result = await GetAllWord();\n//          setWords(prevState =>{\n//              return {...prevState, ...result}\n//          });\n//\n//      }\n//     return (\n//         <div className = 'body'>\n//             <button onClick = {addThemeHandler}>cheate new them</button>\n//             {!!(words) ? <ModalWindow words = {words} />: <h1>123</h1>}\n//         </div>\n//     );\n// }\n//\n// export default ThemesList;","map":{"version":3,"sources":["/Users/user/WebstormProjects/english-words/src/containers/themesList/themesList.js"],"names":["React","Component","GetAllWord","ModalWindow","ThemesList","state","words","componentDidMount","then","value","setState","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;;;AACA,MAAMC,UAAN,SAAyBH,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BI,KAD+B,GACvB;AACJC,MAAAA,KAAK,EAAE;AADH,KADuB;AAAA;;AAI/BC,EAAAA,iBAAiB,GAAG;AAChBL,IAAAA,UAAU,GAAGM,IAAb,CAAkBC,KAAK,IAAI;AACvB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,KAAK,EAAEG;AADG,OAAd;AAGC,KAJL;AAMH;;AAEDE,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,iBACK,CAAC,CAAEL,KAAH,gBAAY,QAAC,WAAD;AAAa,QAAA,KAAK,EAAIA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAZ,gBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADlD,UACoE,CAAC,CAAEA,KAAH,gBAAY,QAAC,WAAD;AAAa,QAAA,KAAK,EAAIA;AAAtB;AAAA;AAAA;AAAA;AAAA,cAAZ,gBAA6C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADjH;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAKH;;AAnB8B;;AAsBnC,eAAeF,UAAf,C,CAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","sourcesContent":["import React, {Component} from 'react';\nimport GetAllWord from \"../../components/DataDB/DataDB\";\nimport ModalWindow from \"../addWord/modalWindow/modalWindow\";\nclass ThemesList extends Component {\n    state = {\n        words: []\n    };\n    componentDidMount() {\n        GetAllWord().then(value => {\n            this.setState({\n                words: value\n            })\n            }\n        )\n    }\n\n    render() {\n        return (\n            <div>\n                {!!(words) ? <ModalWindow words = {words} />: <h1>123</h1>}    {!!(words) ? <ModalWindow words = {words} />: <h1>123</h1>}\n            </div>\n        );\n    }\n}\n\nexport default ThemesList;\n\n// import React, {useState} from 'react';\n// import GetAllWord from \"../../components/DataDB/DataDB\";\n// import ModalWindow from \"../addWord/modalWindow/modalWindow\";\n// function ThemesList(props) {\n//     let [words, setWords] = useState([]);\n//      async function addThemeHandler() {\n//          let result = await GetAllWord();\n//          setWords(prevState =>{\n//              return {...prevState, ...result}\n//          });\n//\n//      }\n//     return (\n//         <div className = 'body'>\n//             <button onClick = {addThemeHandler}>cheate new them</button>\n//             {!!(words) ? <ModalWindow words = {words} />: <h1>123</h1>}\n//         </div>\n//     );\n// }\n//\n// export default ThemesList;"]},"metadata":{},"sourceType":"module"}