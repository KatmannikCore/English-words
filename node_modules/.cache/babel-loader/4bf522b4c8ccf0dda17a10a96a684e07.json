{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js\";\nimport React, { Component } from 'react';\nimport { GetAllThemesFromDB, GetAllWordsFromDB } from \"../../components/DataDB/DataDB\";\nimport './learnWords.css';\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LearnWords extends Component {\n  constructor() {\n    super();\n\n    this.changeTheme = value => {\n      return value;\n    };\n\n    this.checkWordHandler = () => {\n      if (this.state.userWord === this.state.currentWord) {\n        this.setState({\n          isRightWord: true\n        });\n      } else {\n        this.setState({\n          isRightWord: false\n        });\n      }\n    };\n\n    this.changeWordHandler = () => {\n      this.setState({\n        currentWord: this.state.words[this.state.currentNumber].translation,\n        currentNumber: Math.floor(Math.random() * this.state.words.length)\n      });\n    };\n\n    this.create = () => {\n      GetAllThemesFromDB().then(value => {\n        this.setState({\n          themes: value\n        });\n      });\n    };\n\n    this.state = {\n      words: [],\n      currentWord: '',\n      currentNumber: 1,\n      isRightWord: true,\n      userWord: '',\n      themes: [],\n      currentTheme: [],\n      name: ''\n    };\n    this.changeTheme = this.changeTheme.bind(this);\n  }\n\n  componentDidMount() {\n    GetAllWordsFromDB().then(value => {\n      this.setState({\n        words: value,\n        currentWord: value[0].translation\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.create,\n        children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0442\\u0435\\u043C\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalWindowChooseTheme, {\n        themes: this.state.themes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.currentWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.changeWordHandler,\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => {\n          this.setState({\n            userWord: event.target.value\n          });\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.checkWordHandler,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.isRightWord ? 'верно' : 'неверно'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), this.changeTheme()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LearnWords;","map":{"version":3,"sources":["/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js"],"names":["React","Component","GetAllThemesFromDB","GetAllWordsFromDB","ModalWindowChooseTheme","LearnWords","constructor","changeTheme","value","checkWordHandler","state","userWord","currentWord","setState","isRightWord","changeWordHandler","words","currentNumber","translation","Math","floor","random","length","create","then","themes","currentTheme","name","bind","componentDidMount","render","event","target"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {GetAllThemesFromDB, GetAllWordsFromDB} from \"../../components/DataDB/DataDB\";\nimport './learnWords.css'\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nclass LearnWords extends Component {\n    constructor(){\n        super();\n        this.state = {\n            words : [],\n            currentWord: '',\n            currentNumber: 1,\n            isRightWord: true,\n            userWord: '',\n            themes: [],\n            currentTheme: [],\n            name: ''\n        };\n        this.changeTheme = this.changeTheme.bind(this)\n    }\n    changeTheme = (value) =>{\n        return  value\n    };\n    componentDidMount() {\n        GetAllWordsFromDB().then(value => {\n            this.setState({\n                words: value,\n                currentWord: value[0].translation\n            });\n        })\n    }\n    checkWordHandler = () => {\n       if(this.state.userWord === this.state.currentWord){\n           this.setState({\n               isRightWord:true\n           })\n       }else {\n           this.setState({\n               isRightWord:false\n           })\n       }\n    };\n    changeWordHandler = () => {\n        this.setState({\n            currentWord: this.state.words[this.state.currentNumber].translation,\n            currentNumber: Math.floor(Math.random() * this.state.words.length)\n        })\n    };\n    create = () => {\n        GetAllThemesFromDB().then(value => {\n            this.setState({\n                themes: value\n            })\n        });\n    };\n    render() {\n        return (\n            <div className = 'body'>\n                <button onClick={this.create}>Выбрать тему</button>\n                <ModalWindowChooseTheme themes={this.state.themes}/>\n                <p>{this.state.currentWord}</p>\n                <button onClick={this.changeWordHandler}>Change</button>\n                <input onChange={event => {this.setState({userWord:event.target.value})}} type=\"text\"/>\n                <button onClick={this.checkWordHandler}>Check</button>\n                <p>{this.state.isRightWord ? 'верно':'неверно'}</p>\n                {this.changeTheme()}\n            </div>\n        );\n    }\n}\n\nexport default LearnWords;"]},"metadata":{},"sourceType":"module"}