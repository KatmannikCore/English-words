{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/english-words/src/containers/addWord/modalWindow/modalWindow.js\";\nimport React, { Component } from 'react';\nimport GetAllWord from \"../../../components/DataDB/DataDB\";\nimport Word from \"../../wordList/Word/Word\";\nimport './modalWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalWindow extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      words: [],\n      themesWords: []\n    };\n\n    this.onClickHandler = event => {\n      event.currentTarget.classList.toggle('active-string');\n\n      if (event.target.className === 'modal-string active-string') {\n        let word = {\n          'word': event.currentTarget.firstChild.textContent,\n          'translation': event.currentTarget.lastChild.textContent\n        };\n        let themesWords = this.state.themesWords;\n        themesWords.push(word);\n        this.setState({\n          themesWords\n        });\n      }\n\n      console.log(event.currentTarget);\n      console.log(this.state.themesWords);\n    };\n  }\n\n  componentDidMount() {\n    GetAllWord().then(value => {\n      this.setState({\n        words: value\n      });\n    });\n  }\n\n  addWordsHandler(event) {\n    console.log(event.currentTarget.value);\n  }\n\n  renderModalWindow() {\n    return this.state.words.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        id: item.id,\n        onClick: this.onClickHandler,\n        className: \"modal-string\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.translation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ModalWindow\",\n      children: [this.renderModalWindow(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addWordsHandler,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ModalWindow;","map":{"version":3,"sources":["/Users/user/WebstormProjects/english-words/src/containers/addWord/modalWindow/modalWindow.js"],"names":["React","Component","GetAllWord","Word","ModalWindow","state","words","themesWords","onClickHandler","event","currentTarget","classList","toggle","target","className","word","firstChild","textContent","lastChild","push","setState","console","log","componentDidMount","then","value","addWordsHandler","renderModalWindow","map","item","id","translation","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAO,mBAAP;;;AACA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACxB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,WAAW,EAAE;AAFT,KADwB;;AAAA,SAgBhCC,cAhBgC,GAgBfC,KAAK,IAAG;AACrBA,MAAAA,KAAK,CAACC,aAAN,CAAoBC,SAApB,CAA8BC,MAA9B,CAAqC,eAArC;;AACA,UAAGH,KAAK,CAACI,MAAN,CAAaC,SAAb,KAA2B,4BAA9B,EAA2D;AACvD,YAAIC,IAAI,GAAG;AAAC,kBAAON,KAAK,CAACC,aAAN,CAAoBM,UAApB,CAA+BC,WAAvC;AAAoD,yBAAeR,KAAK,CAACC,aAAN,CAAoBQ,SAApB,CAA8BD;AAAjG,SAAX;AACA,YAAIV,WAAW,GAAG,KAAKF,KAAL,CAAWE,WAA7B;AACAA,QAAAA,WAAW,CAACY,IAAZ,CAAiBJ,IAAjB;AACA,aAAKK,QAAL,CAAc;AACVb,UAAAA;AADU,SAAd;AAGH;;AACDc,MAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACC,aAAlB;AACAW,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKjB,KAAL,CAAWE,WAAvB;AACH,KA5B+B;AAAA;;AAKhCgB,EAAAA,iBAAiB,GAAG;AAChBrB,IAAAA,UAAU,GAAGsB,IAAb,CAAkBC,KAAK,IAAI;AACnB,WAAKL,QAAL,CAAc;AACVd,QAAAA,KAAK,EAAEmB;AADG,OAAd;AAGH,KAJL;AAMH;;AACDC,EAAAA,eAAe,CAACjB,KAAD,EAAO;AACnBY,IAAAA,OAAO,CAACC,GAAR,CAAYb,KAAK,CAACC,aAAN,CAAoBe,KAAhC;AACF;;AAcDE,EAAAA,iBAAiB,GAAE;AACf,WAAO,KAAKtB,KAAL,CAAWC,KAAX,CAAiBsB,GAAjB,CAAqBC,IAAI,IAAG;AAC/B,0BAAQ;AAAK,QAAA,EAAE,EAAIA,IAAI,CAACC,EAAhB;AAAoB,QAAA,OAAO,EAAI,KAAKtB,cAApC;AAAoD,QAAA,SAAS,EAAG,cAAhE;AAAA,gCACJ;AAAA,oBAAIqB,IAAI,CAACd;AAAT;AAAA;AAAA;AAAA;AAAA,gBADI,eAEJ;AAAA,oBAAIc,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFI;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAIH,KALM,CAAP;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA,iBACK,KAAKL,iBAAL,EADL,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKD,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA7C+B;;AAgDpC,eAAetB,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport GetAllWord from \"../../../components/DataDB/DataDB\";\nimport Word from \"../../wordList/Word/Word\";\nimport './modalWindow.css';\nclass ModalWindow extends Component {\n    state = {\n        words: [],\n        themesWords: []\n    };\n    componentDidMount() {\n        GetAllWord().then(value => {\n                this.setState({\n                    words: value\n                })\n            }\n        )\n    }\n    addWordsHandler(event){\n       console.log(event.currentTarget.value)\n    }\n    onClickHandler = event =>{\n        event.currentTarget.classList.toggle('active-string');\n        if(event.target.className === 'modal-string active-string'){\n            let word = {'word':event.currentTarget.firstChild.textContent, 'translation': event.currentTarget.lastChild.textContent};\n            let themesWords = this.state.themesWords;\n            themesWords.push(word);\n            this.setState({\n                themesWords\n            });\n        }\n        console.log(event.currentTarget);\n        console.log(this.state.themesWords)\n    };\n    renderModalWindow(){\n        return this.state.words.map(item =>{\n            return  <div id = {item.id} onClick = {this.onClickHandler} className = 'modal-string' >\n                <p>{item.word}</p>\n                <p>{item.translation}</p>\n            </div>\n        })\n    }\n\n    render() {\n        return (\n            <div className = 'ModalWindow'>\n                {this.renderModalWindow()}\n                <button onClick={this.addWordsHandler}>add</button>\n            </div>\n        );\n    }\n}\n\nexport default ModalWindow;\n"]},"metadata":{},"sourceType":"module"}