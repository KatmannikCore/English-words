{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/english-words/src/containers/addWord/addWord.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction AddWord(props) {\n  _s();\n\n  let word = useState({\n    word: '',\n    translation: ''\n  });\n\n  async function addWordHandler(event) {\n    event.preventDefault();\n\n    try {\n      const response = await axios.post('https://learn-words-7ba20-default-rtdb.firebaseio.com/words', word[0]);\n      console.log(response.data);\n    } catch (e) {\n      console.log(e);\n    }\n\n    function addHeandler() {\n      console.log(word[0]);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => {\n          word[0].word = event.target.value;\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => {\n          word[0].translation = event.target.value;\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: addWordHandler,\n        children: \"send\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_s(AddWord, \"cAlKwacna2RAsq7sBsryY+cK08A=\");\n\n_c = AddWord;\nexport default AddWord;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddWord\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/english-words/src/containers/addWord/addWord.js"],"names":["React","useState","axios","AddWord","props","word","translation","addWordHandler","event","preventDefault","response","post","console","log","data","e","addHeandler","target","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA8B,OAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,SAASC,OAAT,CAAiBC,KAAjB,EAAwB;AAAA;;AACpB,MAAIC,IAAI,GAAGJ,QAAQ,CAAC;AAChBI,IAAAA,IAAI,EAAE,EADU;AAEhBC,IAAAA,WAAW,EAAE;AAFG,GAAD,CAAnB;;AAKA,iBAAeC,cAAf,CAA8BC,KAA9B,EAAqC;AACjCA,IAAAA,KAAK,CAACC,cAAN;;AACA,QAAI;AACA,YAAMC,QAAQ,GAAG,MAAMR,KAAK,CAACS,IAAN,CAAW,6DAAX,EAA0EN,IAAI,CAAC,CAAD,CAA9E,CAAvB;AACAO,MAAAA,OAAO,CAACC,GAAR,CAAYH,QAAQ,CAACI,IAArB;AACH,KAHD,CAGE,OAAOC,CAAP,EAAU;AACRH,MAAAA,OAAO,CAACC,GAAR,CAAYE,CAAZ;AACH;;AAGD,aAASC,WAAT,GAAuB;AACnBJ,MAAAA,OAAO,CAACC,GAAR,CAAYR,IAAI,CAAC,CAAD,CAAhB;AACH;;AAED,wBACI;AAAA,8BACI;AAAO,QAAA,QAAQ,EAAGG,KAAD,IAAW;AACxBH,UAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQA,IAAR,GAAeG,KAAK,CAACS,MAAN,CAAaC,KAA5B;AACH,SAFD;AAEG,QAAA,IAAI,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cADJ,eAII;AAAO,QAAA,QAAQ,EAAGV,KAAD,IAAW;AACxBH,UAAAA,IAAI,CAAC,CAAD,CAAJ,CAAQC,WAAR,GAAsBE,KAAK,CAACS,MAAN,CAAaC,KAAnC;AACH,SAFD;AAEG,QAAA,IAAI,EAAC;AAFR;AAAA;AAAA;AAAA;AAAA,cAJJ,eAOI;AAAQ,QAAA,OAAO,EAAEX,cAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAWH;AACJ;;GAhCQJ,O;;KAAAA,O;AAiCT,eAAeA,OAAf","sourcesContent":["import React,{useState}  from 'react';\nimport axios from 'axios'\n\n\nfunction AddWord(props) {\n    let word = useState({\n        word: '',\n        translation: ''\n    });\n\n    async function addWordHandler(event) {\n        event.preventDefault();\n        try {\n            const response = await axios.post('https://learn-words-7ba20-default-rtdb.firebaseio.com/words', word[0]);\n            console.log(response.data)\n        } catch (e) {\n            console.log(e)\n        }\n\n\n        function addHeandler() {\n            console.log(word[0])\n        }\n\n        return (\n            <div>\n                <input onChange={(event) => {\n                    word[0].word = event.target.value\n                }} type=\"text\"/>\n                <input onChange={(event) => {\n                    word[0].translation = event.target.value\n                }} type=\"text\"/>\n                <button onClick={addWordHandler}>send</button>\n            </div>\n        );\n    }\n}\nexport default AddWord"]},"metadata":{},"sourceType":"module"}