{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js\";\nimport React, { Component } from 'react';\nimport { GetAllThemesFromDB, GetAllWordsFromDB } from \"../../components/DataDB/DataDB\";\nimport './learnWords.css';\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LearnWords extends Component {\n  constructor() {\n    super();\n\n    this.changeTheme = value => {\n      this.setState({\n        currentTheme: value.list,\n        currentWord: value.list[this.state.currentNumber]\n      });\n      this.createWindow();\n    };\n\n    this.checkWordHandler = () => {\n      if (this.state.currentTheme.length === 0) {\n        alert('тест закочен');\n      } else {\n        if (this.state.userWord === this.state.currentWord.word) {\n          let currentTheme = this.state.currentTheme;\n          let index = currentTheme.indexOf(this.state.currentWord);\n          currentTheme.splice(index, 1);\n          this.setState({\n            isRightWord: true,\n            currentTheme\n          });\n          this.setState({\n            answers: this.state.answers.push({\n              numberQustion: 1,\n              isRightAnswer: this.state.isRightWord\n            })\n          });\n          this.changeWordHandler();\n        } else {\n          this.setState({\n            isRightWord: false\n          });\n        }\n      }\n    };\n\n    this.changeWordHandler = () => {\n      if (this.state.currentTheme.length === 0) {\n        alert('тест закочен');\n      } else {\n        this.setState({\n          currentWord: this.state.currentTheme[this.state.currentNumber],\n          currentNumber: Math.floor(Math.random() * (this.state.currentTheme.length - 1))\n        });\n      }\n    };\n\n    this.createWindow = () => {\n      this.setState({\n        isOpenWindow: !this.state.isOpenWindow\n      });\n    };\n\n    this.onChangeHandler = event => {\n      this.setState({\n        userWord: event.target.value\n      });\n    };\n\n    this.state = {\n      currentWord: {},\n      currentNumber: 0,\n      isRightWord: false,\n      userWord: '',\n      themes: [],\n      currentTheme: [],\n      isOpenWindow: false,\n      answers: []\n    };\n    this.changeTheme = this.changeTheme.bind(this);\n  }\n\n  componentDidMount() {\n    GetAllThemesFromDB().then(value => {\n      this.setState({\n        themes: value\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: this.state.isOpenWindow ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.createWindow,\n          children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0442\\u0435\\u043C\\u0443\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), console.log(this.state.currentWord.translation), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.currentWord.translation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.changeWordHandler,\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.onChangeHandler,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.checkWordHandler,\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.isRightWord ? 'верно' : 'неверно'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ModalWindowChooseTheme, {\n        themes: this.state.themes,\n        changeTheme: this.changeTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 23\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LearnWords;","map":{"version":3,"sources":["/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js"],"names":["React","Component","GetAllThemesFromDB","GetAllWordsFromDB","ModalWindowChooseTheme","LearnWords","constructor","changeTheme","value","setState","currentTheme","list","currentWord","state","currentNumber","createWindow","checkWordHandler","length","alert","userWord","word","index","indexOf","splice","isRightWord","answers","push","numberQustion","isRightAnswer","changeWordHandler","Math","floor","random","isOpenWindow","onChangeHandler","event","target","themes","bind","componentDidMount","then","render","console","log","translation"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {GetAllThemesFromDB, GetAllWordsFromDB} from \"../../components/DataDB/DataDB\";\nimport './learnWords.css'\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nclass LearnWords extends Component {\n    constructor(){\n        super();\n        this.state = {\n            currentWord: {},\n            currentNumber: 0,\n            isRightWord: false,\n            userWord: '',\n            themes: [],\n            currentTheme: [],\n            isOpenWindow:false,\n            answers: []\n        };\n        this.changeTheme = this.changeTheme.bind(this)\n    }\n    changeTheme = (value) =>{\n        this.setState({\n            currentTheme: value.list,\n            currentWord: value.list[this.state.currentNumber]\n        });\n        this.createWindow()\n    };\n    checkWordHandler = () => {\n        if(this.state.currentTheme.length === 0){\n            alert('тест закочен')\n        }else {\n            if(this.state.userWord === this.state.currentWord.word){\n                let currentTheme = this.state.currentTheme;\n                let index = currentTheme.indexOf(this.state.currentWord);\n                currentTheme.splice(index, 1);\n                this.setState({\n                    isRightWord:true,\n                    currentTheme\n                });\n                this.setState({\n                    answers: this.state.answers.push({numberQustion: 1, isRightAnswer: this.state.isRightWord,})\n                });\n                this.changeWordHandler()\n            }else {\n                this.setState({\n                    isRightWord:false\n                })\n            }\n        }\n    };\n    changeWordHandler = () => {\n        if(this.state.currentTheme.length === 0){\n            alert('тест закочен')\n        }else {\n            this.setState({\n                currentWord: this.state.currentTheme[this.state.currentNumber],\n                currentNumber: Math.floor(Math.random() *(this.state.currentTheme.length - 1))\n            });\n        }\n    };\n    createWindow = () => {\n        this.setState({\n            isOpenWindow: !this.state.isOpenWindow\n        });\n    };\n    componentDidMount() {\n        GetAllThemesFromDB().then(value => {\n            this.setState({\n                themes: value,\n            })\n        });\n    }\n    onChangeHandler = (event) =>{\n        this.setState({userWord:event.target.value});\n    };\n    render() {\n        return (\n            <div className = 'body'>\n                {this.state.isOpenWindow ?(\n                    <div>\n                        <button onClick={this.createWindow}>Выбрать тему</button>\n                        {console.log(this.state.currentWord.translation)}\n                        <p>{this.state.currentWord.translation}</p>\n                        <button onClick={this.changeWordHandler}>Change</button>\n                        <input onChange={this.onChangeHandler} type=\"text\"/>\n                        <button onClick={this.checkWordHandler}>Check</button>\n                        <p>{this.state.isRightWord ? 'верно':'неверно'}</p>\n                    </div>)\n                    :(<ModalWindowChooseTheme themes={this.state.themes} changeTheme = {this.changeTheme}/>)\n                }\n            </div>\n        );\n    }\n}\n\nexport default LearnWords;"]},"metadata":{},"sourceType":"module"}