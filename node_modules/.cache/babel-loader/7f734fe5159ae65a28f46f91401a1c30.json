{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js\";\nimport React, { Component } from 'react';\nimport { GetAllThemesFromDB, GetAllWordsFromDB } from \"../../components/DataDB/DataDB\";\nimport './learnWords.css';\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LearnWords extends Component {\n  constructor() {\n    super();\n\n    this.changeTheme = value => {\n      this.setState({\n        currentTheme: value.list,\n        currentWord: value.list[this.state.currentNumber]\n      });\n      this.createWindow();\n    };\n\n    this.checkWordHandler = () => {\n      if (this.state.currentTheme.length === 0) {\n        alert('тест закочен');\n      } else {\n        if (this.state.userWord === this.state.currentWord.word) {\n          let currentTheme = this.state.currentTheme;\n          let index = currentTheme.indexOf(this.state.currentWord);\n          currentTheme.splice(index, 1);\n          this.setState({\n            isRightWord: true,\n            currentTheme\n          });\n          this.changeWordHandler();\n        } else {\n          this.setState({\n            isRightWord: false\n          });\n        }\n      }\n    };\n\n    this.changeWordHandler = () => {\n      if (this.state.currentTheme.length === 0) {\n        alert('тест закочен');\n      } else {\n        this.setState({\n          currentWord: this.state.currentTheme[this.state.currentNumber],\n          currentNumber: Math.floor(Math.random() * this.state.currentTheme.length) - 1\n        });\n        console.log(this.state.currentNumber, this.state.currentTheme.length);\n      }\n    };\n\n    this.createWindow = () => {\n      this.setState({\n        isOpenWindow: !this.state.isOpenWindow\n      });\n    };\n\n    this.onChangeHandler = event => {\n      this.setState({\n        userWord: event.target.value\n      });\n    };\n\n    this.state = {\n      currentWord: {},\n      currentNumber: 0,\n      isRightWord: false,\n      userWord: '',\n      themes: [],\n      currentTheme: [],\n      isOpenWindow: false\n    };\n    this.changeTheme = this.changeTheme.bind(this);\n  }\n\n  componentDidMount() {\n    GetAllThemesFromDB().then(value => {\n      this.setState({\n        themes: value\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createWindow,\n        children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0442\\u0435\\u043C\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), this.state.isOpenWindow ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [console.log(this.state.currentWord.translation), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.currentWord.translation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.changeWordHandler,\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: this.onChangeHandler,\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.checkWordHandler,\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.isRightWord ? 'верно' : 'неверно'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ModalWindowChooseTheme, {\n        themes: this.state.themes,\n        changeTheme: this.changeTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LearnWords;","map":{"version":3,"sources":["/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js"],"names":["React","Component","GetAllThemesFromDB","GetAllWordsFromDB","ModalWindowChooseTheme","LearnWords","constructor","changeTheme","value","setState","currentTheme","list","currentWord","state","currentNumber","createWindow","checkWordHandler","length","alert","userWord","word","index","indexOf","splice","isRightWord","changeWordHandler","Math","floor","random","console","log","isOpenWindow","onChangeHandler","event","target","themes","bind","componentDidMount","then","render","translation"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {GetAllThemesFromDB, GetAllWordsFromDB} from \"../../components/DataDB/DataDB\";\nimport './learnWords.css'\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nclass LearnWords extends Component {\n    constructor(){\n        super();\n        this.state = {\n            currentWord: {},\n            currentNumber: 0,\n            isRightWord: false,\n            userWord: '',\n            themes: [],\n            currentTheme: [],\n            isOpenWindow:false,\n        };\n        this.changeTheme = this.changeTheme.bind(this)\n    }\n    changeTheme = (value) =>{\n        this.setState({\n            currentTheme: value.list,\n            currentWord: value.list[this.state.currentNumber]\n        });\n        this.createWindow()\n    };\n    checkWordHandler = () => {\n        if(this.state.currentTheme.length === 0){\n            alert('тест закочен')\n        }else {\n            if(this.state.userWord === this.state.currentWord.word){\n                let currentTheme = this.state.currentTheme;\n                let index = currentTheme.indexOf(this.state.currentWord);\n                currentTheme.splice(index, 1);\n                this.setState({\n                    isRightWord:true,\n                    currentTheme\n                });\n                this.changeWordHandler()\n            }else {\n                this.setState({\n                    isRightWord:false\n                })\n            }\n        }\n    };\n    changeWordHandler = () => {\n        if(this.state.currentTheme.length === 0){\n            alert('тест закочен')\n        }else {\n            this.setState({\n                currentWord: this.state.currentTheme[this.state.currentNumber],\n                currentNumber: Math.floor(Math.random() * this.state.currentTheme.length) -1\n            });\n            console.log(this.state.currentNumber, this.state.currentTheme.length)\n        }\n    };\n    createWindow = () => {\n        this.setState({\n            isOpenWindow: !this.state.isOpenWindow\n        });\n    };\n    componentDidMount() {\n        GetAllThemesFromDB().then(value => {\n            this.setState({\n                themes: value,\n            })\n        });\n    }\n    onChangeHandler = (event) =>{\n        this.setState({userWord:event.target.value});\n    };\n    render() {\n        return (\n            <div className = 'body'>\n                <button onClick={this.createWindow}>Выбрать тему</button>\n                {this.state.isOpenWindow ?(\n                    <div>\n                        {console.log(this.state.currentWord.translation)}\n                        <p>{this.state.currentWord.translation}</p>\n                        <button onClick={this.changeWordHandler}>Change</button>\n                        <input onChange={this.onChangeHandler} type=\"text\"/>\n                        <button onClick={this.checkWordHandler}>Check</button>\n                        <p>{this.state.isRightWord ? 'верно':'неверно'}</p>\n                    </div>)\n                    :(<ModalWindowChooseTheme themes={this.state.themes} changeTheme = {this.changeTheme}/>)\n                }\n            </div>\n        );\n    }\n}\n\nexport default LearnWords;"]},"metadata":{},"sourceType":"module"}