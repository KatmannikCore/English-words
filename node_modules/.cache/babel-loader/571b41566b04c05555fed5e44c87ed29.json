{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/english-words/src/containers/addWord/modalWindow/modalWindow.js\";\nimport React from 'react';\nimport Word from \"../../wordList/Word/Word\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalWindow(props) {\n  function createModalWindow() {\n    console.log(props.words);\n    return renderWord();\n  }\n\n  ;\n\n  function renderWord() {\n    return props.words.map(item => {\n      return /*#__PURE__*/_jsxDEV(Word, {\n        word: item.word,\n        translation: item.translation\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: renderWord()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n}\n\n_c = ModalWindow;\nexport default ModalWindow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalWindow\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/english-words/src/containers/addWord/modalWindow/modalWindow.js"],"names":["React","Word","ModalWindow","props","createModalWindow","console","log","words","renderWord","map","item","word","translation","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;;;AAEA,SAASC,WAAT,CAAqBC,KAArB,EAA4B;AACxB,WAASC,iBAAT,GAA4B;AACxBC,IAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACI,KAAlB;AACA,WAAOC,UAAU,EAAjB;AACH;;AAAA;;AACD,WAASA,UAAT,GAAqB;AACjB,WAAOL,KAAK,CAACI,KAAN,CAAYE,GAAZ,CAAgBC,IAAI,IAAI;AAC3B,0BACI,QAAC,IAAD;AAEI,QAAA,IAAI,EAAIA,IAAI,CAACC,IAFjB;AAGI,QAAA,WAAW,EAAID,IAAI,CAACE;AAHxB,SACWF,IAAI,CAACG,EADhB;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KARM,CAAP;AASH;;AACD,sBACI;AAAA,cACKL,UAAU;AADf;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KArBQN,W;AAuBT,eAAeA,WAAf","sourcesContent":["import React from 'react';\nimport Word from \"../../wordList/Word/Word\";\n\nfunction ModalWindow(props) {\n    function createModalWindow(){\n        console.log(props.words);\n        return renderWord()\n    };\n    function renderWord(){\n        return props.words.map(item => {\n            return(\n                <Word\n                    key = {item.id}\n                    word = {item.word}\n                    translation = {item.translation}\n                />\n            )\n        })\n    }\n    return (\n        <div>\n            {renderWord()}\n        </div>\n    );\n}\n\nexport default ModalWindow;"]},"metadata":{},"sourceType":"module"}