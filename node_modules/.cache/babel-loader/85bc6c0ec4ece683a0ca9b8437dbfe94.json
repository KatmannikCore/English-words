{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/English-words/src/containers/learnWords/modalWindowResultLearn/modalWindowResultLearn.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './modalWindowResultLearn.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalWindowResultLearn(props) {\n  _s();\n\n  let [active, setActive] = useState(props.active);\n\n  function resultAnswers() {\n    return props.answers.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\" \\u2116 \", item.numberQuestion, \" | answers: \", item.isRightAnswer, \" | word: \", item.word.word, \" | translation: \", item.word.translation, \" | your word: \", item.userWord]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 7,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  function result() {\n    let countRightAnswers = 0;\n    props.answers.forEach(item => {\n      if (item.isRightAnswer) {\n        countRightAnswers++;\n      }\n    });\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [countRightAnswers, \"/\", props.answers.length]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 17\n    }, this);\n  }\n\n  function closeModal() {\n    props.endLearn();\n    setActive(!active);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: active ? 'modal-container active' : 'modal-container',\n    onClick: () => closeModal(),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"modal-result\",\n      onClick: e => e.stopPropagation(),\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u0420\\u0435\\u0437\\u0443\\u043B\\u044C\\u0442\\u0430\\u0442 \\u0442\\u0435\\u0441\\u0442\\u0430: \", result()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), resultAnswers()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalWindowResultLearn, \"8Pty4fqUBVN6mzSxG5slm+yyhag=\");\n\n_c = ModalWindowResultLearn;\nexport default ModalWindowResultLearn;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalWindowResultLearn\");","map":{"version":3,"sources":["/Users/user/Desktop/English-words/src/containers/learnWords/modalWindowResultLearn/modalWindowResultLearn.js"],"names":["React","useState","ModalWindowResultLearn","props","active","setActive","resultAnswers","answers","map","item","numberQuestion","isRightAnswer","word","translation","userWord","result","countRightAnswers","forEach","length","closeModal","endLearn","e","stopPropagation"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,8BAAP;;;AACA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AACnC,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBJ,QAAQ,CAACE,KAAK,CAACC,MAAP,CAAlC;;AACA,WAASE,aAAT,GAAyB;AACrB,WAAOH,KAAK,CAACI,OAAN,CAAcC,GAAd,CAAkBC,IAAI,IAAI;AAC7B,0BAAQ;AAAA,+BAAOA,IAAI,CAACC,cAAZ,kBAAwCD,IAAI,CAACE,aAA7C,eAAqEF,IAAI,CAACG,IAAL,CAAUA,IAA/E,sBAAqGH,IAAI,CAACG,IAAL,CAAUC,WAA/G,oBAA0IJ,IAAI,CAACK,QAA/I;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AACH,KAFM,CAAP;AAGH;;AACD,WAASC,MAAT,GAAkB;AACd,QAAIC,iBAAiB,GAAG,CAAxB;AACAb,IAAAA,KAAK,CAACI,OAAN,CAAcU,OAAd,CAAsBR,IAAI,IAAI;AAC1B,UAAIA,IAAI,CAACE,aAAT,EAAuB;AACnBK,QAAAA,iBAAiB;AACpB;AACJ,KAJD;AAKA,wBAAQ;AAAA,iBAAOA,iBAAP,OAA2Bb,KAAK,CAACI,OAAN,CAAcW,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA,YAAR;AACH;;AACD,WAASC,UAAT,GAAqB;AACjBhB,IAAAA,KAAK,CAACiB,QAAN;AACAf,IAAAA,SAAS,CAAC,CAACD,MAAF,CAAT;AACH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAEA,MAAM,GAAG,wBAAH,GAA6B,iBAAnD;AAAuE,IAAA,OAAO,EAAE,MAAMe,UAAU,EAAhG;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,cAAf;AAA8B,MAAA,OAAO,EAAEE,CAAC,IAAIA,CAAC,CAACC,eAAF,EAA5C;AAAA,8BACI;AAAA,8GAAqBP,MAAM,EAA3B;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKT,aAAa,EAFlB;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GA5BQJ,sB;;KAAAA,sB;AA8BT,eAAeA,sBAAf","sourcesContent":["import React, {useState} from 'react';\nimport './modalWindowResultLearn.css'\nfunction ModalWindowResultLearn(props) {\n    let [active, setActive] = useState(props.active);\n    function resultAnswers() {\n        return props.answers.map(item => {\n            return (<p> № {item.numberQuestion} | answers: {item.isRightAnswer} | word: {item.word.word} | translation: {item.word.translation} | your word: {item.userWord}</p>)\n        });\n    }\n    function result() {\n        let countRightAnswers = 0;\n        props.answers.forEach(item => {\n            if (item.isRightAnswer){\n                countRightAnswers++\n            }\n        });\n        return (<span>{countRightAnswers}/{props.answers.length}</span> )\n    }\n    function closeModal(){\n        props.endLearn();\n        setActive(!active)\n    }\n    return (\n        <div className={active ? 'modal-container active': 'modal-container' } onClick={() => closeModal()}>\n            <div className='modal-result' onClick={e => e.stopPropagation()}>\n                <p>Результат теста: {result()}</p>\n                {resultAnswers()}\n            </div>\n        </div>\n    );\n}\n\nexport default ModalWindowResultLearn;"]},"metadata":{},"sourceType":"module"}