{"ast":null,"code":"var _jsxFileName = \"/Users/user/Downloads/English-words-dev/src/containers/themesList/themesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { GetAllThemesFromDB, GetAllWordsFromDB } from \"../../components/DataDB/DataDB\";\nimport ModalWindowThemes from \"./modalWindowThemes/modalWindowThemes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThemesList() {\n  _s();\n\n  let [words, setWords] = useState([]);\n  let themes = useRef();\n\n  async function addThemeHandler() {\n    let result = await GetAllWordsFromDB();\n    setWords(prevState => {\n      return { ...prevState,\n        ...result\n      };\n    });\n  }\n\n  function getThemes() {\n    themes = GetAllThemesFrom();\n  }\n\n  function renderThemes() {\n    getThemes().then(() => {\n      console.log(themes);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addThemeHandler,\n      children: \"cheate new them\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this), !!words[0] ? /*#__PURE__*/_jsxDEV(ModalWindowThemes, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 29\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"123\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 52\n    }, this), renderThemes()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ThemesList, \"yC83CjLt1UbXDHcuXthr3QCtvr0=\");\n\n_c = ThemesList;\nexport default ThemesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemesList\");","map":{"version":3,"sources":["/Users/user/Downloads/English-words-dev/src/containers/themesList/themesList.js"],"names":["React","useState","useRef","GetAllThemesFromDB","GetAllWordsFromDB","ModalWindowThemes","ThemesList","words","setWords","themes","addThemeHandler","result","prevState","getThemes","GetAllThemesFrom","renderThemes","then","console","log"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,EAAyBC,MAAzB,QAAsC,OAAtC;AACA,SAAQC,kBAAR,EAA4BC,iBAA5B,QAAoD,gCAApD;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;;;AAEA,SAASC,UAAT,GAAsB;AAAA;;AAClB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,EAAD,CAAhC;AACA,MAAIQ,MAAM,GAAGP,MAAM,EAAnB;;AAEC,iBAAeQ,eAAf,GAAiC;AAC7B,QAAIC,MAAM,GAAG,MAAMP,iBAAiB,EAApC;AACAI,IAAAA,QAAQ,CAACI,SAAS,IAAG;AACjB,aAAO,EAAC,GAAGA,SAAJ;AAAe,WAAGD;AAAlB,OAAP;AACH,KAFO,CAAR;AAIH;;AACD,WAASE,SAAT,GAAqB;AAClBJ,IAAAA,MAAM,GAAIK,gBAAgB,EAA1B;AACH;;AACD,WAASC,YAAT,GAAwB;AACpBF,IAAAA,SAAS,GAAGG,IAAZ,CAAiB,MAAK;AAElBC,MAAAA,OAAO,CAACC,GAAR,CAAYT,MAAZ;AACH,KAHD;AAIH;;AACD,sBACI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAIC,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAAC,CAAEH,KAAK,CAAC,CAAD,CAAR,gBAAe,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,YAAf,gBAAsC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAF3C,EAGKQ,YAAY,EAHjB;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAOH;;GA3BQT,U;;KAAAA,U;AA6BT,eAAeA,UAAf","sourcesContent":["import React, {useState, useRef} from 'react';\nimport {GetAllThemesFromDB, GetAllWordsFromDB} from \"../../components/DataDB/DataDB\";\nimport ModalWindowThemes from \"./modalWindowThemes/modalWindowThemes\";\n\nfunction ThemesList() {\n    let [words, setWords] = useState([]);\n    let themes = useRef();\n\n     async function addThemeHandler() {\n         let result = await GetAllWordsFromDB();\n         setWords(prevState =>{\n             return {...prevState, ...result}\n         });\n\n     }\n     function getThemes() {\n        themes =  GetAllThemesFrom();\n    }\n    function renderThemes() {\n        getThemes().then(() =>{\n\n            console.log(themes)\n        })\n    }\n    return (\n        <div className = 'body'>\n            <button onClick = {addThemeHandler}>cheate new them</button>\n            {!!(words[0]) ? <ModalWindowThemes />: <h1>123</h1>}\n            {renderThemes() }\n        </div>\n    );\n}\n\nexport default ThemesList;"]},"metadata":{},"sourceType":"module"}