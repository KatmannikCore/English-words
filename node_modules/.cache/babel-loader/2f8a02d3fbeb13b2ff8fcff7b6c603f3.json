{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/english-words/src/containers/addWord/modalWindow/modalWindow.js\";\nimport React, { Component } from 'react';\nimport { GetAllWordsFromDB, SendWordsInDB } from \"../../../components/DataDB/DataDB\";\nimport Word from \"../../wordList/Word/Word\";\nimport './modalWindow.css';\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalWindow extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      words: [],\n      themesWords: []\n    };\n\n    this.addWordsHandler = async () => {\n      let themesWordsBlock = document.querySelectorAll('.modal-string.active-string');\n      themesWordsBlock.forEach(item => {\n        let word = {\n          'word': item.firstChild.textContent,\n          'translation': item.lastChild.textContent\n        };\n        let themesWords = this.state.themesWords;\n        themesWords.push(word);\n        this.setState({\n          themesWords\n        });\n      });\n      SendWordsInDB('Themes', this.state.themesWords);\n    };\n  }\n\n  componentDidMount() {\n    GetAllWordsFromDB().then(value => {\n      this.setState({\n        words: value\n      });\n    });\n  }\n\n  renderModalWindow() {\n    return this.state.words.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: event => event.currentTarget.classList.toggle('active-string'),\n        className: \"modal-string\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.translation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 17\n        }, this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ModalWindow\",\n      children: [this.renderModalWindow(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addWordsHandler,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ModalWindow;","map":{"version":3,"sources":["/Users/user/WebstormProjects/english-words/src/containers/addWord/modalWindow/modalWindow.js"],"names":["React","Component","GetAllWordsFromDB","SendWordsInDB","Word","axios","ModalWindow","state","words","themesWords","addWordsHandler","themesWordsBlock","document","querySelectorAll","forEach","item","word","firstChild","textContent","lastChild","push","setState","componentDidMount","then","value","renderModalWindow","map","event","currentTarget","classList","toggle","translation","id","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,iBAAR,EAA2BC,aAA3B,QAA+C,mCAA/C;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAO,mBAAP;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AACA,MAAMC,WAAN,SAA0BL,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCM,KADgC,GACxB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,WAAW,EAAE;AAFT,KADwB;;AAAA,SAahCC,eAbgC,GAad,YAAW;AACzB,UAAIC,gBAAgB,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,6BAA1B,CAAvB;AACAF,MAAAA,gBAAgB,CAACG,OAAjB,CAAyBC,IAAI,IAAI;AAC7B,YAAIC,IAAI,GAAG;AAAC,kBAAOD,IAAI,CAACE,UAAL,CAAgBC,WAAxB;AAAqC,yBAAeH,IAAI,CAACI,SAAL,CAAeD;AAAnE,SAAX;AACA,YAAIT,WAAW,GAAG,KAAKF,KAAL,CAAWE,WAA7B;AACAA,QAAAA,WAAW,CAACW,IAAZ,CAAiBJ,IAAjB;AACA,aAAKK,QAAL,CAAc;AACVZ,UAAAA;AADU,SAAd;AAGH,OAPD;AAQAN,MAAAA,aAAa,CAAC,QAAD,EAAW,KAAKI,KAAL,CAAWE,WAAtB,CAAb;AACH,KAxB+B;AAAA;;AAKhCa,EAAAA,iBAAiB,GAAG;AAChBpB,IAAAA,iBAAiB,GAAGqB,IAApB,CAAyBC,KAAK,IAAI;AAC1B,WAAKH,QAAL,CAAc;AACVb,QAAAA,KAAK,EAAEgB;AADG,OAAd;AAGH,KAJL;AAMH;;AAcDC,EAAAA,iBAAiB,GAAE;AACf,WAAO,KAAKlB,KAAL,CAAWC,KAAX,CAAiBkB,GAAjB,CAAqBX,IAAI,IAAG;AAC/B,0BAAQ;AAAqB,QAAA,OAAO,EAAIY,KAAK,IAAIA,KAAK,CAACC,aAAN,CAAoBC,SAApB,CAA8BC,MAA9B,CAAqC,eAArC,CAAzC;AAAgG,QAAA,SAAS,EAAG,cAA5G;AAAA,gCACJ;AAAA,oBAAIf,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBADI,eAEJ;AAAA,oBAAID,IAAI,CAACgB;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFI;AAAA,SAAYhB,IAAI,CAACiB,EAAjB;AAAA;AAAA;AAAA;AAAA,cAAR;AAIH,KALM,CAAP;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA,iBACK,KAAKR,iBAAL,EADL,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKf,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA1C+B;;AA6CpC,eAAeJ,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport {GetAllWordsFromDB, SendWordsInDB} from \"../../../components/DataDB/DataDB\";\nimport Word from \"../../wordList/Word/Word\";\nimport './modalWindow.css';\nimport axios from \"axios\";\nclass ModalWindow extends Component {\n    state = {\n        words: [],\n        themesWords: []\n    };\n    componentDidMount() {\n        GetAllWordsFromDB().then(value => {\n                this.setState({\n                    words: value\n                })\n            }\n        )\n    }\n    addWordsHandler = async () =>{\n        let themesWordsBlock = document.querySelectorAll('.modal-string.active-string');\n        themesWordsBlock.forEach(item => {\n            let word = {'word':item.firstChild.textContent, 'translation': item.lastChild.textContent};\n            let themesWords = this.state.themesWords;\n            themesWords.push(word);\n            this.setState({\n                themesWords\n            });\n        });\n        SendWordsInDB('Themes', this.state.themesWords);\n    };\n\n    renderModalWindow(){\n        return this.state.words.map(item =>{\n            return  <div key = {item.id} onClick = {event => event.currentTarget.classList.toggle('active-string')} className = 'modal-string' >\n                <p>{item.word}</p>\n                <p>{item.translation}</p>\n            </div>\n        })\n    }\n\n    render() {\n        return (\n            <div className = 'ModalWindow'>\n                {this.renderModalWindow()}\n                <button onClick={this.addWordsHandler}>add</button>\n            </div>\n        );\n    }\n}\n\nexport default ModalWindow;\n"]},"metadata":{},"sourceType":"module"}