{"ast":null,"code":"import _classCallCheck from\"/Users/user/Desktop/English-words/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"/Users/user/Desktop/English-words/node_modules/@babel/runtime/helpers/esm/createClass.js\";import _assertThisInitialized from\"/Users/user/Desktop/English-words/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";import _inherits from\"/Users/user/Desktop/English-words/node_modules/@babel/runtime/helpers/esm/inherits.js\";import _createSuper from\"/Users/user/Desktop/English-words/node_modules/@babel/runtime/helpers/esm/createSuper.js\";import React,{Component}from'react';import{GetAllThemesFromDB}from\"../../components/DataDB/DataDB\";import'./learnWords.css';import ModalWindowChooseTheme from\"./modalWindowChooseTheme/modalWindowChooseTheme\";import ModalWindowResultLearn from\"./modalWindowResultLearn/modalWindowResultLearn\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LearnWords=/*#__PURE__*/function(_Component){_inherits(LearnWords,_Component);var _super=_createSuper(LearnWords);function LearnWords(){var _this;_classCallCheck(this,LearnWords);_this=_super.call(this);_this.changeTheme=function(value){if(value.list===undefined){_this.setState({validationErrors:'You should choose theme'});}else{_this.setState({validationErrors:'',currentTheme:value.list.slice(),currentWord:value.list[_this.state.currentIndex]});_this.createWindow();console.log(_this.state);}};_this.checkWordHandler=function(){_this.setState({validationErrors:''});if(_this.state.currentTheme.length===0){alert('тест закочен');}else if(_this.state.userWord.trim().length===0){_this.setState({validationErrors:'Entry field doesn\\'t can be empty or complit  of spaces'});}else{_this.nextWordHandler();}_this.clearInput();};_this.nextWordHandler=function(){console.log(_this.state.themes);var currentTheme=_this.state.currentTheme;var index=currentTheme.indexOf(_this.state.currentWord);currentTheme.splice(index,1);var answers=_this.state.answers;answers.push({numberQuestion:_this.state.currentNumber,isRightAnswer:_this.state.userWord===_this.state.currentWord.word,word:_this.state.currentWord,userWord:_this.state.userWord});_this.setState({currentTheme:currentTheme,answers:answers,currentNumber:++_this.state.currentNumber});_this.changeWordHandler();};_this.changeWordHandler=function(){if(_this.state.currentTheme.length===0){alert('тест закочен');_this.setState({isEnd:!_this.state.isEnd});}else{_this.setState({currentWord:_this.state.currentTheme[_this.state.currentIndex],currentIndex:Math.floor(Math.random()*(_this.state.currentTheme.length-1))});}_this.clearInput();};_this.createWindow=function(){if(_this.state.isOpenWindow){_this.resetData();}_this.setState({isOpenWindow:!_this.state.isOpenWindow});};_this.onChangeHandler=function(event){_this.setState({userWord:event.target.value});};_this.resetData=function(){_this.setState({currentWord:{},currentIndex:0,currentNumber:1,isRightWord:false,userWord:'',currentTheme:[],isOpenWindow:false,answers:[],isEnd:false});};_this.clearInput=function(){_this.setState({userWord:''});};_this.state={currentWord:{},currentIndex:0,currentNumber:1,isRightWord:false,userWord:'',themes:[],currentTheme:[],isOpenWindow:false,answers:[],isEnd:false,validationErrors:''};_this.changeTheme=_this.changeTheme.bind(_assertThisInitialized(_this));_this.resetData=_this.resetData.bind(_assertThisInitialized(_this));return _this;}_createClass(LearnWords,[{key:\"componentDidMount\",value:function componentDidMount(){var _this2=this;GetAllThemesFromDB().then(function(value){_this2.setState({themes:value});});}},{key:\"render\",value:function render(){return/*#__PURE__*/_jsxs(\"div\",{className:\"body\",children:[this.state.isOpenWindow?/*#__PURE__*/_jsxs(\"div\",{children:[this.state.isEnd?/*#__PURE__*/_jsx(ModalWindowResultLearn,{active:this.state.isEnd,endLearn:this.resetData,answers:this.state.answers}):'',/*#__PURE__*/_jsx(\"button\",{onClick:this.createWindow,children:\"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0442\\u0435\\u043C\\u0443\"}),/*#__PURE__*/_jsx(\"p\",{children:this.state.currentWord.translation}),/*#__PURE__*/_jsx(\"button\",{onClick:this.changeWordHandler,children:\"Change\"}),/*#__PURE__*/_jsx(\"input\",{value:this.state.userWord,onChange:this.onChangeHandler,type:\"text\"}),/*#__PURE__*/_jsx(\"button\",{onClick:this.checkWordHandler,children:\"Check\"})]}):/*#__PURE__*/_jsx(ModalWindowChooseTheme,{themes:this.state.themes,changeTheme:this.changeTheme}),/*#__PURE__*/_jsx(\"div\",{className:\"validation_learn_word\",children:this.state.validationErrors})]});}}]);return LearnWords;}(Component);export default LearnWords;","map":{"version":3,"sources":["/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js"],"names":["React","Component","GetAllThemesFromDB","ModalWindowChooseTheme","ModalWindowResultLearn","LearnWords","changeTheme","value","list","undefined","setState","validationErrors","currentTheme","slice","currentWord","state","currentIndex","createWindow","console","log","checkWordHandler","length","alert","userWord","trim","nextWordHandler","clearInput","themes","index","indexOf","splice","answers","push","numberQuestion","currentNumber","isRightAnswer","word","changeWordHandler","isEnd","Math","floor","random","isOpenWindow","resetData","onChangeHandler","event","target","isRightWord","bind","then","translation"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {GetAllThemesFromDB} from \"../../components/DataDB/DataDB\";\nimport './learnWords.css'\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nimport ModalWindowResultLearn from \"./modalWindowResultLearn/modalWindowResultLearn\";\nclass LearnWords extends Component {\n    constructor(){\n        super();\n        this.state = {\n            currentWord: {},\n            currentIndex: 0,\n            currentNumber:1,\n            isRightWord: false,\n            userWord: '',\n            themes: [],\n            currentTheme: [],\n            isOpenWindow:false,\n            answers: [],\n            isEnd: false,\n            validationErrors: ''\n        };\n        this.changeTheme = this.changeTheme.bind(this);\n        this.resetData = this.resetData.bind(this);\n    }\n    changeTheme = (value) =>{\n        if (value.list ===  undefined){\n            this.setState({\n                validationErrors: 'You should choose theme'\n            })\n        } else {\n            this.setState({\n                validationErrors: '',\n                currentTheme: value.list.slice(),\n                currentWord: value.list[this.state.currentIndex]\n            });\n             this.createWindow();\n            console.log(this.state)\n        }\n    };\n    checkWordHandler = () => {\n        this.setState({\n            validationErrors: ''\n        });\n        if(this.state.currentTheme.length === 0){\n            alert('тест закочен');\n        }\n        else if(this.state.userWord.trim().length === 0){\n            this.setState({\n                validationErrors: 'Entry field doesn\\'t can be empty or complit  of spaces'\n            })\n        } else {\n            this.nextWordHandler();\n        }\n        this.clearInput();\n    };\n    nextWordHandler = () => {\n        console.log(this.state.themes);\n        let currentTheme = this.state.currentTheme;\n        let index = currentTheme.indexOf(this.state.currentWord);\n        currentTheme.splice(index, 1);\n        let answers = this.state.answers;\n        answers.push({numberQuestion: this.state.currentNumber, isRightAnswer: this.state.userWord === this.state.currentWord.word, word: this.state.currentWord, userWord: this.state.userWord })\n        this.setState({\n            currentTheme,\n            answers,\n            currentNumber: ++this.state.currentNumber\n        });\n        this.changeWordHandler();\n    };\n    changeWordHandler = () => {\n        if(this.state.currentTheme.length === 0){\n            alert('тест закочен');\n            this.setState({\n                isEnd: !this.state.isEnd\n            });\n        }else {\n            this.setState({\n                currentWord: this.state.currentTheme[this.state.currentIndex],\n                currentIndex: Math.floor(Math.random() *(this.state.currentTheme.length - 1))\n            });\n        }\n        this.clearInput()\n    };\n    createWindow = () => {\n        if (this.state.isOpenWindow) {\n            this.resetData()\n        }\n        this.setState({\n            isOpenWindow: !this.state.isOpenWindow\n        });\n    };\n    componentDidMount() {\n        GetAllThemesFromDB().then(value => {\n            this.setState({\n                themes: value,\n            })\n        });\n    }\n    onChangeHandler = (event) =>{\n        this.setState({userWord:event.target.value});\n    };\n    resetData = () =>{\n        this.setState( {\n            currentWord: {},\n            currentIndex: 0,\n            currentNumber:1,\n            isRightWord: false,\n            userWord: '',\n            currentTheme: [],\n            isOpenWindow:false,\n            answers: [],\n            isEnd: false\n        });\n    };\n    clearInput = () => {\n        this.setState({\n            userWord: ''\n        })\n    };\n    render() {\n        return (\n            <div className = 'body'>\n                {this.state.isOpenWindow ?(\n                    <div>\n                        {this.state.isEnd ? <ModalWindowResultLearn active={this.state.isEnd} endLearn={this.resetData} answers={this.state.answers} /> : ''}\n                        <button onClick={this.createWindow}>Выбрать тему</button>\n                        <p>{this.state.currentWord.translation}</p>\n                        <button onClick={this.changeWordHandler}>Change</button>\n                        <input value={this.state.userWord} onChange={this.onChangeHandler} type=\"text\"/>\n                        <button onClick={this.checkWordHandler}>Check</button>\n                    </div>)\n                    :(<ModalWindowChooseTheme themes={this.state.themes} changeTheme = {this.changeTheme}/>)\n                }\n                <div className='validation_learn_word'>\n                    {this.state.validationErrors}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default LearnWords;"]},"metadata":{},"sourceType":"module"}