{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/english-words/src/containers/themesList/themesList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport GetAllWord from \"../../components/DataDB/DataDB\";\nimport ModalWindow from \"../addWord/modalWindow/modalWindow\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ThemesList(props) {\n  _s();\n\n  let [words, setWords] = useState([]);\n\n  async function addThemeHandler() {\n    let result = await GetAllWord();\n    setWords(prevState => {\n      return { ...prevState,\n        ...result\n      };\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"body\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addThemeHandler,\n      children: \"cheate new them\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 13\n    }, this), !!words ? /*#__PURE__*/_jsxDEV(ModalWindow, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 26\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"123\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 43\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ThemesList, \"1ZJhU64pVeNwwL/6UGtfvs/W4TE=\");\n\n_c = ThemesList;\nexport default ThemesList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemesList\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/english-words/src/containers/themesList/themesList.js"],"names":["React","useState","GetAllWord","ModalWindow","ThemesList","props","words","setWords","addThemeHandler","result","prevState"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;AACA,OAAOC,WAAP,MAAwB,oCAAxB;;;AACA,SAASC,UAAT,CAAoBC,KAApB,EAA2B;AAAA;;AACvB,MAAI,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,EAAD,CAAhC;;AACC,iBAAeO,eAAf,GAAiC;AAC7B,QAAIC,MAAM,GAAG,MAAMP,UAAU,EAA7B;AACAK,IAAAA,QAAQ,CAACG,SAAS,IAAG;AACjB,aAAO,EAAC,GAAGA,SAAJ;AAAe,WAAGD;AAAlB,OAAP;AACH,KAFO,CAAR;AAIH;;AACF,sBACI;AAAK,IAAA,SAAS,EAAG,MAAjB;AAAA,4BACI;AAAQ,MAAA,OAAO,EAAID,eAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,EAEK,CAAC,CAAEF,KAAH,gBAAY,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,YAAZ,gBAA6B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFlC;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAMH;;GAfQF,U;;KAAAA,U;AAiBT,eAAeA,UAAf","sourcesContent":["import React, {useState} from 'react';\nimport GetAllWord from \"../../components/DataDB/DataDB\";\nimport ModalWindow from \"../addWord/modalWindow/modalWindow\";\nfunction ThemesList(props) {\n    let [words, setWords] = useState([]);\n     async function addThemeHandler() {\n         let result = await GetAllWord();\n         setWords(prevState =>{\n             return {...prevState, ...result}\n         });\n\n     }\n    return (\n        <div className = 'body'>\n            <button onClick = {addThemeHandler}>cheate new them</button>\n            {!!(words) ? <ModalWindow />: <h1>123</h1>}\n        </div>\n    );\n}\n\nexport default ThemesList;"]},"metadata":{},"sourceType":"module"}