{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/English-words/src/containers/learnWords/modalWindowChooseTheme/modalWindowChooseTheme.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport './modalWindowChooseTheme.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalWindowChooseTheme(props) {\n  _s();\n\n  let currentTheme = useRef();\n\n  function renderThemes() {\n    return props.themes.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: highlightInRed,\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 9,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 8,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  function highlightInRed(event) {\n    let list = document.querySelectorAll('.active');\n\n    for (let i = 0; i < list.length; i++) {\n      console.log(1);\n      list[i].classList.remove('active');\n    } // document.querySelectorAll('.active').forEach(item => item.className = '');\n\n\n    event.currentTarget.classList.toggle('active-string');\n    findCurrentTheme(event.currentTarget.innerText);\n  }\n\n  function findCurrentTheme(wordOfTheme) {\n    props.themes.forEach(item => {\n      if (item.name === wordOfTheme) {\n        currentTheme = item;\n      }\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"block\",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      className: \"changeTheme\",\n      children: [renderThemes(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => props.changeTheme(currentTheme),\n        children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalWindowChooseTheme, \"BTkjp8u8bTYQLtnIZgejI4Hlsd4=\");\n\n_c = ModalWindowChooseTheme;\nexport default ModalWindowChooseTheme;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalWindowChooseTheme\");","map":{"version":3,"sources":["/Users/user/Desktop/English-words/src/containers/learnWords/modalWindowChooseTheme/modalWindowChooseTheme.js"],"names":["React","useRef","ModalWindowChooseTheme","props","currentTheme","renderThemes","themes","map","item","highlightInRed","name","event","list","document","querySelectorAll","i","length","console","log","classList","remove","currentTarget","toggle","findCurrentTheme","innerText","wordOfTheme","forEach","changeTheme"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,QAA6B,OAA7B;AACA,OAAO,8BAAP;;;AACA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AACnC,MAAIC,YAAY,GAAGH,MAAM,EAAzB;;AACA,WAASI,YAAT,GAAwB;AACpB,WAAOF,KAAK,CAACG,MAAN,CAAaC,GAAb,CAAiBC,IAAI,IAAG;AAC3B,0BACI;AAAK,QAAA,OAAO,EAAIC,cAAhB;AAAA,+BACI;AAAA,oBAAID,IAAI,CAACE;AAAT;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,cADJ;AAKH,KANM,CAAP;AAOH;;AACD,WAASD,cAAT,CAAwBE,KAAxB,EAA8B;AAE1B,QAAIC,IAAI,GAAGC,QAAQ,CAACC,gBAAT,CAA0B,SAA1B,CAAX;;AACA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,IAAI,CAACI,MAAzB,EAAiCD,CAAC,EAAlC,EAAqC;AACjCE,MAAAA,OAAO,CAACC,GAAR,CAAY,CAAZ;AACAN,MAAAA,IAAI,CAACG,CAAD,CAAJ,CAAQI,SAAR,CAAkBC,MAAlB,CAAyB,QAAzB;AACH,KANyB,CAO1B;;;AACAT,IAAAA,KAAK,CAACU,aAAN,CAAoBF,SAApB,CAA8BG,MAA9B,CAAqC,eAArC;AACAC,IAAAA,gBAAgB,CAACZ,KAAK,CAACU,aAAN,CAAoBG,SAArB,CAAhB;AACH;;AACD,WAASD,gBAAT,CAA0BE,WAA1B,EAAuC;AACnCtB,IAAAA,KAAK,CAACG,MAAN,CAAaoB,OAAb,CAAqBlB,IAAI,IAAG;AACxB,UAAGA,IAAI,CAACE,IAAL,KAAce,WAAjB,EAA6B;AACzBrB,QAAAA,YAAY,GAAGI,IAAf;AACH;AACJ,KAJD;AAKH;;AACD,sBACI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA,2BACI;AAAK,MAAA,SAAS,EAAC,aAAf;AAAA,iBACKH,YAAY,EADjB,eAEI;AAAQ,QAAA,OAAO,EAAE,MAAMF,KAAK,CAACwB,WAAN,CAAkBvB,YAAlB,CAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;GArCQF,sB;;KAAAA,sB;AAuCT,eAAeA,sBAAf","sourcesContent":["import React, {useRef}  from 'react';\nimport './modalWindowChooseTheme.css'\nfunction ModalWindowChooseTheme(props) {\n    let currentTheme = useRef();\n    function renderThemes() {\n        return props.themes.map(item =>{\n            return(\n                <div onClick = {highlightInRed} >\n                    <p>{item.name}</p>\n                </div>\n            )\n        })\n    }\n    function highlightInRed(event){\n\n        let list = document.querySelectorAll('.active');\n        for (let i = 0; i < list.length; i++){\n            console.log(1)\n            list[i].classList.remove('active')\n        }\n        // document.querySelectorAll('.active').forEach(item => item.className = '');\n        event.currentTarget.classList.toggle('active-string');\n        findCurrentTheme(event.currentTarget.innerText);\n    }\n    function findCurrentTheme(wordOfTheme) {\n        props.themes.forEach(item =>{\n            if(item.name === wordOfTheme){\n                currentTheme = item;\n            }\n        })\n    }\n    return (\n        <div id=\"block\">\n            <nav className=\"changeTheme\">\n                {renderThemes() }\n                <button onClick={() => props.changeTheme(currentTheme)}>Выбрать</button>\n            </nav>\n        </div>\n    );\n}\n\nexport default ModalWindowChooseTheme;"]},"metadata":{},"sourceType":"module"}