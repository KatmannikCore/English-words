{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/english-words/src/containers/learnWords/learnWords.js\";\nimport React, { Component } from 'react';\nimport { GetAllWordsFromDB } from \"../../components/DataDB/DataDB\";\nimport './learnWords.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LearnWords extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      arrayWord: [],\n      currentWord: '',\n      currentNumber: 1,\n      isRightWord: true,\n      userWord: ''\n    };\n\n    this.checkWordHandler = () => {\n      if (this.state.userWord === this.state.currentWord) {\n        this.setState({\n          isRightWord: true\n        });\n      } else {\n        this.setState({\n          isRightWord: false\n        });\n      }\n    };\n\n    this.changeWordHandler = () => {\n      this.setState({\n        currentWord: this.state.arrayWord[this.state.currentNumber].translation,\n        currentNumber: Math.floor(Math.random() * this.state.arrayWord.length)\n      });\n    };\n\n    this.create = () => {\n      console.log(GetAllWordsFromDB());\n    };\n  }\n\n  componentDidMount() {\n    GetAllWordsFromDB().then(value => {\n      this.setState({\n        arrayWord: value,\n        currentWord: value[0].translation\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.create,\n        children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0442\\u0435\\u043C\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.currentWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.changeWordHandler,\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => {\n          this.setState({\n            userWord: event.target.value\n          });\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.checkWordHandler,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.isRightWord ? 'верно' : 'неверно'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LearnWords;","map":{"version":3,"sources":["/Users/user/WebstormProjects/english-words/src/containers/learnWords/learnWords.js"],"names":["React","Component","GetAllWordsFromDB","LearnWords","state","arrayWord","currentWord","currentNumber","isRightWord","userWord","checkWordHandler","setState","changeWordHandler","translation","Math","floor","random","length","create","console","log","componentDidMount","then","value","render","event","target"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,iBAAR,QAAgC,gCAAhC;AACA,OAAO,kBAAP;;;AACA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACJC,MAAAA,SAAS,EAAG,EADR;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,aAAa,EAAE,CAHX;AAIJC,MAAAA,WAAW,EAAE,IAJT;AAKJC,MAAAA,QAAQ,EAAE;AALN,KADuB;;AAAA,SAgB/BC,gBAhB+B,GAgBZ,MAAM;AACtB,UAAG,KAAKN,KAAL,CAAWK,QAAX,KAAwB,KAAKL,KAAL,CAAWE,WAAtC,EAAkD;AAC9C,aAAKK,QAAL,CAAc;AACVH,UAAAA,WAAW,EAAC;AADF,SAAd;AAGH,OAJD,MAIM;AACF,aAAKG,QAAL,CAAc;AACVH,UAAAA,WAAW,EAAC;AADF,SAAd;AAGH;AACH,KA1B8B;;AAAA,SA2B/BI,iBA3B+B,GA2BX,MAAM;AACtB,WAAKD,QAAL,CAAc;AACVL,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWG,aAAhC,EAA+CM,WADlD;AAEVN,QAAAA,aAAa,EAAEO,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKZ,KAAL,CAAWC,SAAX,CAAqBY,MAAhD;AAFL,OAAd;AAIH,KAhC8B;;AAAA,SAiC/BC,MAjC+B,GAiCtB,MAAM;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYlB,iBAAiB,EAA7B;AACH,KAnC8B;AAAA;;AAQ/BmB,EAAAA,iBAAiB,GAAG;AAChBnB,IAAAA,iBAAiB,GAAGoB,IAApB,CAAyBC,KAAK,IAAI;AAC9B,WAAKZ,QAAL,CAAc;AACVN,QAAAA,SAAS,EAAEkB,KADD;AAEVjB,QAAAA,WAAW,EAAEiB,KAAK,CAAC,CAAD,CAAL,CAASV;AAFZ,OAAd;AAIH,KALD;AAMH;;AAqBDW,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKN,MAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAA,kBAAI,KAAKd,KAAL,CAAWE;AAAf;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,OAAO,EAAE,KAAKM,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAO,QAAA,QAAQ,EAAEa,KAAK,IAAI;AAAC,eAAKd,QAAL,CAAc;AAACF,YAAAA,QAAQ,EAACgB,KAAK,CAACC,MAAN,CAAaH;AAAvB,WAAd;AAA6C,SAAxE;AAA0E,QAAA,IAAI,EAAC;AAA/E;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAQ,QAAA,OAAO,EAAE,KAAKb,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cALJ,eAMI;AAAA,kBAAI,KAAKN,KAAL,CAAWI,WAAX,GAAyB,OAAzB,GAAiC;AAArC;AAAA;AAAA;AAAA;AAAA,cANJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAUH;;AA/C8B;;AAkDnC,eAAeL,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport {GetAllWordsFromDB} from \"../../components/DataDB/DataDB\";\nimport './learnWords.css'\nclass LearnWords extends Component {\n    state = {\n        arrayWord : [],\n        currentWord: '',\n        currentNumber: 1,\n        isRightWord: true,\n        userWord: ''\n    };\n    componentDidMount() {\n        GetAllWordsFromDB().then(value => {\n            this.setState({\n                arrayWord: value,\n                currentWord: value[0].translation\n            });\n        })\n    }\n    checkWordHandler = () => {\n       if(this.state.userWord === this.state.currentWord){\n           this.setState({\n               isRightWord:true\n           })\n       }else {\n           this.setState({\n               isRightWord:false\n           })\n       }\n    };\n    changeWordHandler = () => {\n        this.setState({\n            currentWord: this.state.arrayWord[this.state.currentNumber].translation,\n            currentNumber: Math.floor(Math.random() * this.state.arrayWord.length)\n        })\n    };\n    create = () => {\n        console.log(GetAllWordsFromDB())\n    };\n    render() {\n        return (\n            <div className = 'body'>\n                <button onClick={this.create}>Выбрать тему</button>\n                <p>{this.state.currentWord}</p>\n                <button onClick={this.changeWordHandler}>Change</button>\n                <input onChange={event => {this.setState({userWord:event.target.value})}} type=\"text\"/>\n                <button onClick={this.checkWordHandler}>Check</button>\n                <p>{this.state.isRightWord ? 'верно':'неверно'}</p>\n            </div>\n        );\n    }\n}\n\nexport default LearnWords;"]},"metadata":{},"sourceType":"module"}