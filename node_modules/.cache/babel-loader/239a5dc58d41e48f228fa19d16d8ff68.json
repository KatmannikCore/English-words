{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/English-words/src/containers/learnWords/modalWindowChooseTheme/modalWindowChooseTheme.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './modalWindowChooseTheme.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction ModalWindowChooseTheme(props) {\n  _s();\n\n  const [isActive, setActive] = useState(false);\n\n  function hiddenOrOpenWindow(event) {\n    let newActive = !isActive;\n    setActive(prevState => {\n      return newActive;\n    });\n    console.log(isActive);\n  }\n\n  function renderTheme() {\n    return props.themes.map(item => {\n      let listWords = 'empty';\n\n      if (isActive) {\n        listWords = item.list.map(word => {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(\"a\", {\n              children: word.word\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 30\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this);\n        });\n      }\n\n      return /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [/*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"active\",\n          children: [item.name, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: event => hiddenOrOpenWindow(event),\n            children: \"\\u0441\\u043A\\u0440\\u044B\\u0442\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 55\n          }, this), \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"submenu\",\n          children: listWords\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"block\",\n    children: /*#__PURE__*/_jsxDEV(\"nav\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: \"topmenu\",\n        children: renderTheme()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ModalWindowChooseTheme, \"NIDogoy7bmTp1+ctz7hxf3NMsLg=\");\n\n_c = ModalWindowChooseTheme;\nexport default ModalWindowChooseTheme;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModalWindowChooseTheme\");","map":{"version":3,"sources":["/Users/user/WebstormProjects/English-words/src/containers/learnWords/modalWindowChooseTheme/modalWindowChooseTheme.js"],"names":["React","useState","ModalWindowChooseTheme","props","isActive","setActive","hiddenOrOpenWindow","event","newActive","prevState","console","log","renderTheme","themes","map","item","listWords","list","word","name"],"mappings":";;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAO,8BAAP;;;AACA,SAASC,sBAAT,CAAgCC,KAAhC,EAAuC;AAAA;;AACnC,QAAM,CAACC,QAAD,EAAWC,SAAX,IAAwBJ,QAAQ,CAAC,KAAD,CAAtC;;AACA,WAASK,kBAAT,CAA4BC,KAA5B,EAAkC;AAC9B,QAAIC,SAAS,GAAG,CAACJ,QAAjB;AACAC,IAAAA,SAAS,CAACI,SAAS,IAAG;AAClB,aAAQD,SAAR;AACH,KAFQ,CAAT;AAGAE,IAAAA,OAAO,CAACC,GAAR,CAAYP,QAAZ;AACH;;AACD,WAASQ,WAAT,GAAuB;AACnB,WAAOT,KAAK,CAACU,MAAN,CAAaC,GAAb,CAAiBC,IAAI,IAAG;AAC3B,UAAIC,SAAS,GAAG,OAAhB;;AACA,UAAIZ,QAAJ,EAAc;AACVY,QAAAA,SAAS,GAAGD,IAAI,CAACE,IAAL,CAAUH,GAAV,CAAcI,IAAI,IAAI;AAC9B,8BACI;AAAA,mCAAK;AAAA,wBAAKA,IAAI,CAACA;AAAV;AAAA;AAAA;AAAA;AAAA;AAAL;AAAA;AAAA;AAAA;AAAA,kBADJ;AAGH,SAJW,CAAZ;AAKH;;AACD,0BACI;AAAA,gCAAI;AAAG,UAAA,SAAS,EAAC,QAAb;AAAA,qBAAuBH,IAAI,CAACI,IAA5B,oBAAkC;AAAQ,YAAA,OAAO,EAAGZ,KAAD,IAAWD,kBAAkB,CAACC,KAAD,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAAlC;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAJ,eACI;AAAI,UAAA,SAAS,EAAC,SAAd;AAAA,oBACKS;AADL;AAAA;AAAA;AAAA;AAAA,gBADJ;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ;AAOH,KAhBM,CAAP;AAiBH;;AACD,sBACI;AAAK,IAAA,EAAE,EAAC,OAAR;AAAA,2BACI;AAAA,6BACI;AAAI,QAAA,SAAS,EAAC,SAAd;AAAA,kBACKJ,WAAW;AADhB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,UADJ;AASH;;GArCQV,sB;;KAAAA,sB;AAuCT,eAAeA,sBAAf","sourcesContent":["import React,{useState} from 'react';\nimport './modalWindowChooseTheme.css'\nfunction ModalWindowChooseTheme(props) {\n    const [isActive, setActive] = useState(false);\n    function hiddenOrOpenWindow(event){\n        let newActive = !isActive;\n        setActive(prevState =>{\n            return  newActive\n        })\n        console.log(isActive)\n    }\n    function renderTheme() {\n        return props.themes.map(item =>{\n            let listWords = 'empty';\n            if (isActive) {\n                listWords = item.list.map(word => {\n                    return(\n                        <li ><a >{word.word}</a></li>\n                    )\n                });\n            }\n            return(\n                <li><a className=\"active\">{item.name} <button onClick={(event) => hiddenOrOpenWindow(event)}>скрыть</button> </a>\n                    <ul className=\"submenu\">\n                        {listWords}\n                    </ul>\n                </li>\n            )\n        })\n    }\n    return (\n        <div id=\"block\">\n            <nav>\n                <ul className=\"topmenu\">\n                    {renderTheme() }\n                </ul>\n            </nav>\n        </div>\n    );\n}\n\nexport default ModalWindowChooseTheme;"]},"metadata":{},"sourceType":"module"}