{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/english-words/src/containers/addWord/modalWindow/modalWindow.js\";\nimport React, { Component } from 'react';\nimport GetAllWord from \"../../../components/DataDB/DataDB\";\nimport Word from \"../../wordList/Word/Word\";\nimport './modalWindow.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ModalWindow extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      words: [],\n      themesWords: []\n    };\n  }\n\n  componentDidMount() {\n    GetAllWord().then(value => {\n      this.setState({\n        words: value\n      });\n    });\n  }\n\n  addWordsHandler(event) {\n    console.log(event.currentTarget.value);\n  }\n\n  onClickHandler(event) {\n    event.currentTarget.classList.toggle('active-string');\n    let word = {\n      word: event.currentTarget.firstChild.textContent\n    };\n    console.log(event.currentTarget.firstChild.textContent);\n    console.log(event.currentTarget.lastChild.textContent);\n  }\n\n  renderModalWindow() {\n    return this.state.words.map(item => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        onClick: this.onClickHandler,\n        className: \"modal-string\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.word\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: item.translation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 21\n      }, this);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"ModalWindow\",\n      children: [this.renderModalWindow(), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.addWordsHandler,\n        children: \"add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ModalWindow;","map":{"version":3,"sources":["/Users/user/WebstormProjects/english-words/src/containers/addWord/modalWindow/modalWindow.js"],"names":["React","Component","GetAllWord","Word","ModalWindow","state","words","themesWords","componentDidMount","then","value","setState","addWordsHandler","event","console","log","currentTarget","onClickHandler","classList","toggle","word","firstChild","textContent","lastChild","renderModalWindow","map","item","translation","render"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,mCAAvB;AACA,OAAOC,IAAP,MAAiB,0BAAjB;AACA,OAAO,mBAAP;;;AACA,MAAMC,WAAN,SAA0BH,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCI,KADgC,GACxB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,WAAW,EAAE;AAFT,KADwB;AAAA;;AAKhCC,EAAAA,iBAAiB,GAAG;AAChBN,IAAAA,UAAU,GAAGO,IAAb,CAAkBC,KAAK,IAAI;AACnB,WAAKC,QAAL,CAAc;AACVL,QAAAA,KAAK,EAAEI;AADG,OAAd;AAGH,KAJL;AAMH;;AACDE,EAAAA,eAAe,CAACC,KAAD,EAAO;AACnBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAN,CAAoBN,KAAhC;AACF;;AACDO,EAAAA,cAAc,CAACJ,KAAD,EAAO;AACjBA,IAAAA,KAAK,CAACG,aAAN,CAAoBE,SAApB,CAA8BC,MAA9B,CAAqC,eAArC;AACA,QAAIC,IAAI,GAAG;AAACA,MAAAA,IAAI,EAACP,KAAK,CAACG,aAAN,CAAoBK,UAApB,CAA+BC;AAArC,KAAX;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAN,CAAoBK,UAApB,CAA+BC,WAA3C;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,aAAN,CAAoBO,SAApB,CAA8BD,WAA1C;AACH;;AACDE,EAAAA,iBAAiB,GAAE;AACf,WAAO,KAAKnB,KAAL,CAAWC,KAAX,CAAiBmB,GAAjB,CAAqBC,IAAI,IAAG;AAC/B,0BAAQ;AAAK,QAAA,OAAO,EAAI,KAAKT,cAArB;AAAqC,QAAA,SAAS,EAAG,cAAjD;AAAA,gCACJ;AAAA,oBAAIS,IAAI,CAACN;AAAT;AAAA;AAAA;AAAA;AAAA,gBADI,eAEJ;AAAA,oBAAIM,IAAI,CAACC;AAAT;AAAA;AAAA;AAAA;AAAA,gBAFI;AAAA;AAAA;AAAA;AAAA;AAAA,cAAR;AAIH,KALM,CAAP;AAMH;;AAEDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,aAAjB;AAAA,iBACK,KAAKJ,iBAAL,EADL,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKZ,eAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AAtC+B;;AAyCpC,eAAeR,WAAf","sourcesContent":["import React, {Component} from 'react';\nimport GetAllWord from \"../../../components/DataDB/DataDB\";\nimport Word from \"../../wordList/Word/Word\";\nimport './modalWindow.css';\nclass ModalWindow extends Component {\n    state = {\n        words: [],\n        themesWords: []\n    };\n    componentDidMount() {\n        GetAllWord().then(value => {\n                this.setState({\n                    words: value\n                })\n            }\n        )\n    }\n    addWordsHandler(event){\n       console.log(event.currentTarget.value)\n    }\n    onClickHandler(event){\n        event.currentTarget.classList.toggle('active-string');\n        let word = {word:event.currentTarget.firstChild.textContent}\n        console.log(event.currentTarget.firstChild.textContent);\n        console.log(event.currentTarget.lastChild.textContent);\n    }\n    renderModalWindow(){\n        return this.state.words.map(item =>{\n            return  <div onClick = {this.onClickHandler} className = 'modal-string' >\n                <p>{item.word}</p>\n                <p>{item.translation}</p>\n            </div>\n        })\n    }\n\n    render() {\n        return (\n            <div className = 'ModalWindow'>\n                {this.renderModalWindow()}\n                <button onClick={this.addWordsHandler}>add</button>\n            </div>\n        );\n    }\n}\n\nexport default ModalWindow;\n"]},"metadata":{},"sourceType":"module"}