{"ast":null,"code":"var _jsxFileName = \"/Users/user/Downloads/English-words-dev/src/containers/themesList/themesList.js\";\nimport React, { Component } from 'react';\nimport { GetAllThemesFromDB, GetAllWordsFromDB } from \"../../components/DataDB/DataDB\";\nimport ModalWindowThemes from \"./modalWindowThemes/modalWindowThemes\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass ThemesList extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      words: [],\n      isHiddenWindow: false\n    };\n\n    this.toggleWindow = () => {\n      this.setState({\n        isHiddenWindow: !this.state.isHiddenWindow\n      });\n      console.log(this.state.isHiddenWindow);\n    };\n  }\n\n  componentDidMount() {\n    GetAllWordsFromDB().then(value => {\n      this.setState({\n        words: value\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.toggleWindow,\n        children: \"create window \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 17\n      }, this), state.isHiddenModalWindow ? /*#__PURE__*/_jsxDEV(ModalWindowThemes, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 46\n      }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"123\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 69\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default ThemesList;","map":{"version":3,"sources":["/Users/user/Downloads/English-words-dev/src/containers/themesList/themesList.js"],"names":["React","Component","GetAllThemesFromDB","GetAllWordsFromDB","ModalWindowThemes","ThemesList","state","words","isHiddenWindow","toggleWindow","setState","console","log","componentDidMount","then","value","render","isHiddenModalWindow"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,SAAQC,kBAAR,EAA4BC,iBAA5B,QAAoD,gCAApD;AACA,OAAOC,iBAAP,MAA8B,uCAA9B;;;AAGA,MAAMC,UAAN,SAAyBJ,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BK,KAD+B,GACvB;AACJC,MAAAA,KAAK,EAAE,EADH;AAEJC,MAAAA,cAAc,EAAE;AAFZ,KADuB;;AAAA,SAa/BC,YAb+B,GAahB,MAAM;AACjB,WAAKC,QAAL,CAAc;AACVF,QAAAA,cAAc,EAAE,CAAC,KAAKF,KAAL,CAAWE;AADlB,OAAd;AAGAG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKN,KAAL,CAAWE,cAAvB;AACH,KAlB8B;AAAA;;AAM/BK,EAAAA,iBAAiB,GAAG;AAChBV,IAAAA,iBAAiB,GAAGW,IAApB,CAAyBC,KAAK,IAAI;AAC9B,WAAKL,QAAL,CAAc;AACVH,QAAAA,KAAK,EAAEQ;AADG,OAAd;AAGH,KAJD;AAKH;;AAODC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAK,MAAA,SAAS,EAAG,MAAjB;AAAA,8BACI;AAAQ,QAAA,OAAO,EAAE,KAAKP,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADJ,EAEKH,KAAK,CAACW,mBAAN,gBAA4B,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAA5B,gBAAmD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFxD;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAMH;;AA1B8B;;AA6BnC,eAAeZ,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport {GetAllThemesFromDB, GetAllWordsFromDB} from \"../../components/DataDB/DataDB\";\nimport ModalWindowThemes from \"./modalWindowThemes/modalWindowThemes\";\n\n\nclass ThemesList extends Component {\n    state = {\n        words: [],\n        isHiddenWindow: false\n    };\n\n    componentDidMount() {\n        GetAllWordsFromDB().then(value => {\n            this.setState({\n                words: value,\n            });\n        })\n    }\n    toggleWindow = () => {\n        this.setState({\n            isHiddenWindow: !this.state.isHiddenWindow\n        })\n        console.log(this.state.isHiddenWindow)\n    };\n    render() {\n        return (\n            <div className = 'body'>\n                <button onClick={this.toggleWindow}>create window </button>\n                {state.isHiddenModalWindow ? <ModalWindowThemes />: <h1>123</h1>}\n            </div>\n        );\n    }\n}\n\nexport default ThemesList;"]},"metadata":{},"sourceType":"module"}