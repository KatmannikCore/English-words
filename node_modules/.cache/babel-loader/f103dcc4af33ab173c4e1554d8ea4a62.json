{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js\";\nimport React, { Component } from 'react';\nimport { GetAllThemesFromDB, GetAllWordsFromDB } from \"../../components/DataDB/DataDB\";\nimport './learnWords.css';\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LearnWords extends Component {\n  constructor() {\n    super();\n\n    this.changeTheme = value => {\n      this.setState({\n        currentTheme: value,\n        currentWord: value.list[0].translation\n      });\n    };\n\n    this.checkWordHandler = () => {\n      if (this.state.userWord === this.state.currentWord) {\n        this.setState({\n          isRightWord: true\n        });\n      } else {\n        this.setState({\n          isRightWord: false\n        });\n      }\n    };\n\n    this.changeWordHandler = () => {\n      this.setState({\n        currentWord: this.state.currentTheme.list[this.state.currentNumber].translation,\n        currentNumber: Math.floor(Math.random() * this.state.currentTheme.list.length)\n      });\n    };\n\n    this.create = () => {\n      GetAllThemesFromDB().then(value => {\n        this.setState({\n          themes: value\n        });\n      });\n    };\n\n    this.state = {\n      words: [],\n      currentWord: '',\n      currentNumber: 1,\n      isRightWord: true,\n      userWord: '',\n      themes: [],\n      currentTheme: []\n    };\n    this.changeTheme = this.changeTheme.bind(this);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.create,\n        children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0442\\u0435\\u043C\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ModalWindowChooseTheme, {\n        themes: this.state.themes,\n        changeTheme: this.changeTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.currentWord\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.changeWordHandler,\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        onChange: event => {\n          this.setState({\n            userWord: event.target.value\n          });\n        },\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.checkWordHandler,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.isRightWord ? 'верно' : 'неверно'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this), this.state.name]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LearnWords;","map":{"version":3,"sources":["/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js"],"names":["React","Component","GetAllThemesFromDB","GetAllWordsFromDB","ModalWindowChooseTheme","LearnWords","constructor","changeTheme","value","setState","currentTheme","currentWord","list","translation","checkWordHandler","state","userWord","isRightWord","changeWordHandler","currentNumber","Math","floor","random","length","create","then","themes","words","bind","render","event","target","name"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {GetAllThemesFromDB, GetAllWordsFromDB} from \"../../components/DataDB/DataDB\";\nimport './learnWords.css'\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nclass LearnWords extends Component {\n    constructor(){\n        super();\n        this.state = {\n            words : [],\n            currentWord: '',\n            currentNumber: 1,\n            isRightWord: true,\n            userWord: '',\n            themes: [],\n            currentTheme: [],\n        };\n        this.changeTheme = this.changeTheme.bind(this)\n    }\n    changeTheme = (value) =>{\n        this.setState({\n            currentTheme: value,\n            currentWord: value.list[0].translation\n        });\n    };\n    // componentDidMount() {\n    //     GetAllWordsFromDB().then(value => {\n    //         this.setState({\n    //             words: value,\n    //             currentWord: value[0].translation\n    //         });\n    //     })\n    // }\n    checkWordHandler = () => {\n       if(this.state.userWord === this.state.currentWord){\n           this.setState({\n               isRightWord:true\n           })\n       }else {\n           this.setState({\n               isRightWord:false\n           })\n       }\n    };\n    changeWordHandler = () => {\n        this.setState({\n            currentWord: this.state.currentTheme.list[this.state.currentNumber].translation,\n            currentNumber: Math.floor(Math.random() * this.state.currentTheme.list.length)\n        })\n    };\n    create = () => {\n        GetAllThemesFromDB().then(value => {\n            this.setState({\n                themes: value\n            })\n        });\n    };\n    render() {\n        return (\n            <div className = 'body'>\n                <button onClick={this.create}>Выбрать тему</button>\n                <ModalWindowChooseTheme themes={this.state.themes} changeTheme = {this.changeTheme}/>\n                <p>{this.state.currentWord}</p>\n                <button onClick={this.changeWordHandler}>Change</button>\n                <input onChange={event => {this.setState({userWord:event.target.value})}} type=\"text\"/>\n                <button onClick={this.checkWordHandler}>Check</button>\n                <p>{this.state.isRightWord ? 'верно':'неверно'}</p>\n                {this.state.name}\n            </div>\n        );\n    }\n}\n\nexport default LearnWords;"]},"metadata":{},"sourceType":"module"}