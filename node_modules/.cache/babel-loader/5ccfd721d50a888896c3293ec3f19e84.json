{"ast":null,"code":"var _jsxFileName = \"/Users/user/WebstormProjects/english-words/src/containers/learnWords/learnWords.js\";\nimport React, { Component } from 'react';\nimport GetAllWord from \"../../components/DataDB/DataDB\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LearnWords extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      arrayWord: [],\n      currentWord: '',\n      currentNumber: 1,\n      isRightWord: false\n    };\n\n    this.changeWordHandler = () => {\n      this.setState({\n        currentWord: this.state.arrayWord[this.state.currentNumber],\n        currentNumber: Math.floor(Math.random() * this.state.arrayWord.length)\n      });\n    };\n  }\n\n  checkWordHandler() {}\n\n  componentDidMount() {\n    GetAllWord().then(value => {\n      this.setState({\n        arrayWord: value\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: this.state.currentWord.translation\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.changeWordHandler,\n        children: \"Change\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.checkWordHandler,\n        children: \"Check\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LearnWords;","map":{"version":3,"sources":["/Users/user/WebstormProjects/english-words/src/containers/learnWords/learnWords.js"],"names":["React","Component","GetAllWord","LearnWords","state","arrayWord","currentWord","currentNumber","isRightWord","changeWordHandler","setState","Math","floor","random","length","checkWordHandler","componentDidMount","then","value","render","translation"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,UAAP,MAAuB,gCAAvB;;;AAEA,MAAMC,UAAN,SAAyBF,SAAzB,CAAmC;AAAA;AAAA;AAAA,SAC/BG,KAD+B,GACvB;AACJC,MAAAA,SAAS,EAAG,EADR;AAEJC,MAAAA,WAAW,EAAE,EAFT;AAGJC,MAAAA,aAAa,EAAE,CAHX;AAIJC,MAAAA,WAAW,EAAE;AAJT,KADuB;;AAAA,SAU/BC,iBAV+B,GAUX,MAAM;AACtB,WAAKC,QAAL,CAAc;AACVJ,QAAAA,WAAW,EAAE,KAAKF,KAAL,CAAWC,SAAX,CAAqB,KAAKD,KAAL,CAAWG,aAAhC,CADH;AAEVA,QAAAA,aAAa,EAAEI,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgB,KAAKT,KAAL,CAAWC,SAAX,CAAqBS,MAAhD;AAFL,OAAd;AAIH,KAf8B;AAAA;;AAO/BC,EAAAA,gBAAgB,GAAI,CAEnB;;AAODC,EAAAA,iBAAiB,GAAG;AAChBd,IAAAA,UAAU,GAAGe,IAAb,CAAkBC,KAAK,IAAI;AACvB,WAAKR,QAAL,CAAc;AACVL,QAAAA,SAAS,EAAEa;AADD,OAAd;AAGH,KAJD;AAKH;;AACDC,EAAAA,MAAM,GAAG;AACL,wBACI;AAAA,8BACI;AAAA,kBAAI,KAAKf,KAAL,CAAWE,WAAX,CAAuBc;AAA3B;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAQ,QAAA,OAAO,EAAE,KAAKX,iBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAHJ,eAII;AAAQ,QAAA,OAAO,EAAE,KAAKM,gBAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAJJ,eAKI;AAAA;AAAA;AAAA;AAAA,cALJ;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AASH;;AAjC8B;;AAoCnC,eAAeZ,UAAf","sourcesContent":["import React, {Component} from 'react';\nimport GetAllWord from \"../../components/DataDB/DataDB\";\n\nclass LearnWords extends Component {\n    state = {\n        arrayWord : [],\n        currentWord: '',\n        currentNumber: 1,\n        isRightWord: false\n    };\n    checkWordHandler () {\n\n    };\n    changeWordHandler = () => {\n        this.setState({\n            currentWord: this.state.arrayWord[this.state.currentNumber],\n            currentNumber: Math.floor(Math.random() * this.state.arrayWord.length)\n        })\n    };\n    componentDidMount() {\n        GetAllWord().then(value => {\n            this.setState({\n                arrayWord: value\n            });\n        })\n    }\n    render() {\n        return (\n            <div>\n                <p>{this.state.currentWord.translation}</p>\n                <button onClick={this.changeWordHandler}>Change</button>\n                <input type=\"text\"/>\n                <button onClick={this.checkWordHandler}>Check</button>\n                <p>{}</p>\n            </div>\n        );\n    }\n}\n\nexport default LearnWords;"]},"metadata":{},"sourceType":"module"}