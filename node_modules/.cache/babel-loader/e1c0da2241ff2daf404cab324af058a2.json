{"ast":null,"code":"var _jsxFileName = \"/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js\";\nimport React, { Component } from 'react';\nimport { GetAllThemesFromDB } from \"../../components/DataDB/DataDB\";\nimport './learnWords.css';\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass LearnWords extends Component {\n  constructor() {\n    super();\n\n    this.changeTheme = value => {\n      this.setState({\n        currentTheme: value,\n        currentWord: value.list[0].word\n      });\n      this.createWindow();\n    };\n\n    this.checkWordHandler = () => {\n      if (this.state.userWord === this.state.currentWord.word) {\n        this.setState({\n          isRightWord: true,\n          currentTheme: this.state.currentTheme.list.splice(this.state.currentWord, 1)\n        });\n      } else {\n        this.setState({\n          isRightWord: false\n        });\n      }\n    };\n\n    this.changeWordHandler = () => {\n      this.setState({\n        currentWord: this.state.currentTheme.list[this.state.currentNumber].word,\n        currentNumber: Math.floor(Math.random() * this.state.currentTheme.list.length)\n      });\n      console.log(this.state);\n    };\n\n    this.createWindow = () => {\n      this.setState({\n        isOpenWindow: !this.state.isOpenWindow\n      });\n      console.log(this.state);\n    };\n\n    this.state = {\n      currentWord: {},\n      currentNumber: 1,\n      isRightWord: false,\n      userWord: '',\n      themes: [],\n      currentTheme: [],\n      isOpenWindow: false\n    };\n    this.changeTheme = this.changeTheme.bind(this);\n  }\n\n  componentDidMount() {\n    GetAllThemesFromDB().then(value => {\n      this.setState({\n        themes: value\n      });\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"body\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.createWindow,\n        children: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0442\\u0435\\u043C\\u0443\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), this.state.isOpenWindow ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.currentWord.transaction\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.changeWordHandler,\n          children: \"Change\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          onChange: event => {\n            this.setState({\n              userWord: event.target.value\n            });\n          },\n          type: \"text\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: this.checkWordHandler,\n          children: \"Check\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: this.state.isRightWord ? 'верно' : 'неверно'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(ModalWindowChooseTheme, {\n        themes: this.state.themes,\n        changeTheme: this.changeTheme\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default LearnWords;","map":{"version":3,"sources":["/Users/user/Desktop/English-words/src/containers/learnWords/learnWords.js"],"names":["React","Component","GetAllThemesFromDB","ModalWindowChooseTheme","LearnWords","constructor","changeTheme","value","setState","currentTheme","currentWord","list","word","createWindow","checkWordHandler","state","userWord","isRightWord","splice","changeWordHandler","currentNumber","Math","floor","random","length","console","log","isOpenWindow","themes","bind","componentDidMount","then","render","transaction","event","target"],"mappings":"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","sourcesContent":["import React, {Component} from 'react';\nimport {GetAllThemesFromDB} from \"../../components/DataDB/DataDB\";\nimport './learnWords.css'\nimport ModalWindowChooseTheme from \"./modalWindowChooseTheme/modalWindowChooseTheme\";\nclass LearnWords extends Component {\n    constructor(){\n        super();\n        this.state = {\n            currentWord: {},\n            currentNumber: 1,\n            isRightWord: false,\n            userWord: '',\n            themes: [],\n            currentTheme: [],\n            isOpenWindow:false,\n        };\n        this.changeTheme = this.changeTheme.bind(this)\n    }\n    changeTheme = (value) =>{\n        this.setState({\n            currentTheme: value,\n            currentWord: value.list[0].word\n        });\n        this.createWindow()\n    };\n    checkWordHandler = () => {\n       if(this.state.userWord === this.state.currentWord.word){\n           this.setState({\n               isRightWord:true,\n               currentTheme: this.state.currentTheme.list.splice(this.state.currentWord, 1)\n           })\n       }else {\n           this.setState({\n               isRightWord:false\n           })\n       }\n    };\n    changeWordHandler = () => {\n        this.setState({\n            currentWord: this.state.currentTheme.list[this.state.currentNumber].word,\n            currentNumber: Math.floor(Math.random() * this.state.currentTheme.list.length)\n        });\n        console.log( this.state)\n    };\n    createWindow = () => {\n        this.setState({\n            isOpenWindow: !this.state.isOpenWindow\n        });\n        console.log( this.state)\n    };\n    componentDidMount() {\n        GetAllThemesFromDB().then(value => {\n            this.setState({\n                themes: value,\n            })\n        });\n    }\n\n    render() {\n        return (\n            <div className = 'body'>\n                <button onClick={this.createWindow}>Выбрать тему</button>\n                {this.state.isOpenWindow ?(\n                    <div>\n                        <p>{this.state.currentWord.transaction}</p>\n                        <button onClick={this.changeWordHandler}>Change</button>\n                        <input onChange={event => {this.setState({userWord:event.target.value})}} type=\"text\"/>\n                        <button onClick={this.checkWordHandler}>Check</button>\n                        <p>{this.state.isRightWord ? 'верно':'неверно'}</p>\n                    </div>)\n                    :(<ModalWindowChooseTheme themes={this.state.themes} changeTheme = {this.changeTheme}/>)\n                }\n            </div>\n        );\n    }\n}\n\nexport default LearnWords;"]},"metadata":{},"sourceType":"module"}